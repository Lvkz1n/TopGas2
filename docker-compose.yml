version: '3.8'
services:
  # Banco de dados para desenvolvimento local
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: topgas
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicação para desenvolvimento local
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.mono
    restart: unless-stopped
    environment:
      NODE_ENV: development
      LOCALHOST: 'true'
      PORT: '3000'
      DATABASE_URL: postgres://postgres:postgres@db:5432/topgas
      CORS_ORIGIN: http://localhost:3000
      SERVE_STATIC: 'true'
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '3000:3000'
    volumes:
      - ./public:/app/public
      - ./server:/app/server
    command: npm run dev:localhost

  # Aplicação para produção (Easy Panel)
  app-prod:
    build:
      context: .
      dockerfile: Dockerfile.mono
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: '8080'
      DATABASE_URL: postgres://postgres:postgres_cerion@2025@166.0.186.92:5432/postgres_rabbitmq
      CORS_ORIGIN: '*'
      SERVE_STATIC: 'false'
    ports:
      - '8080:80'
    profiles:
      - production

volumes:
  pgdata: {}
